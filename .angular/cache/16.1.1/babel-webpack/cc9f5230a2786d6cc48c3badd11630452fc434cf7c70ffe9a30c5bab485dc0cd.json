{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DeminscriComponent_div_0_div_4_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", field_r3.label, \" is required \");\n  }\n}\nfunction DeminscriComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"label\", 5);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"input\", 6);\n    i0.ɵɵtemplate(4, DeminscriComponent_div_0_div_4_div_4_Template, 2, 1, \"div\", 7);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r3 = ctx.$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    let tmp_5_0;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", field_r3.formControlName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(field_r3.label);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", field_r3.formControlName)(\"type\", field_r3.type)(\"formControlName\", field_r3.formControlName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx_r2.formGroup.get(field_r3.formControlName)) == null ? null : tmp_5_0.invalid) && ((tmp_5_0 = ctx_r2.formGroup.get(field_r3.formControlName)) == null ? null : tmp_5_0.touched));\n  }\n}\nfunction DeminscriComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"form\", 1);\n    i0.ɵɵlistener(\"ngSubmit\", function DeminscriComponent_div_0_Template_form_ngSubmit_3_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.onSubmit());\n    });\n    i0.ɵɵtemplate(4, DeminscriComponent_div_0_div_4_Template, 5, 6, \"div\", 2);\n    i0.ɵɵelementStart(5, \"button\", 3);\n    i0.ɵɵtext(6, \" Submit \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.title);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.formGroup);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.dynamicFields);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r0.formGroup.invalid);\n  }\n}\nfunction DeminscriComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2, \"No item selected\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Please navigate to a valid item.\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class DeminscriComponent {\n  constructor(route, fb) {\n    this.route = route;\n    this.fb = fb;\n    this.item = null;\n    this.title = 'Form';\n    this.dynamicFields = [];\n    // Configuration for forms based on the selected item\n    this.formsConfig = {\n      'mapping-request': {\n        title: 'مطلب ترسيم',\n        fields: [{\n          label: 'Field 1',\n          type: 'text',\n          formControlName: 'field1'\n        }, {\n          label: 'Field 2',\n          type: 'number',\n          formControlName: 'field2'\n        }]\n      },\n      'ownership-deed': {\n        title: 'سند ملكية',\n        fields: [{\n          label: 'Name',\n          type: 'text',\n          formControlName: 'name'\n        }, {\n          label: 'Document ID',\n          type: 'text',\n          formControlName: 'documentId'\n        }]\n      }\n      // Add more forms here...\n    };\n  }\n\n  ngOnInit() {\n    // Get the item from the route\n    this.item = this.route.snapshot.paramMap.get('item');\n    // Load the form configuration based on the item\n    const formConfig = this.formsConfig[this.item || ''];\n    if (formConfig) {\n      this.title = formConfig.title;\n      this.dynamicFields = formConfig.fields;\n      // Initialize the form group dynamically\n      const formControls = {};\n      formConfig.fields.forEach(field => {\n        formControls[field.formControlName] = ['', Validators.required];\n      });\n      this.formGroup = this.fb.group(formControls);\n    } else {\n      console.error('No form configuration found for:', this.item);\n    }\n  }\n  // Handle form submission\n  onSubmit() {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted for:', this.item);\n      console.log('Form Values:', this.formGroup.value);\n      alert('Form submitted successfully!');\n    } else {\n      alert('Please fill all required fields.');\n      this.formGroup.markAllAsTouched();\n    }\n  }\n}\nDeminscriComponent.ɵfac = function DeminscriComponent_Factory(t) {\n  return new (t || DeminscriComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nDeminscriComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeminscriComponent,\n  selectors: [[\"app-deminscri\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [\"class\", \"mb-3\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"mb-3\"], [1, \"form-label\", 3, \"for\"], [1, \"form-control\", 3, \"id\", \"type\", \"formControlName\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"]],\n  template: function DeminscriComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DeminscriComponent_div_0_Template, 7, 4, \"div\", 0);\n      i0.ɵɵtemplate(1, DeminscriComponent_div_1_Template, 5, 0, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.item);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", !ctx.item);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","field_r3","label","ɵɵelement","ɵɵtemplate","DeminscriComponent_div_0_div_4_div_4_Template","ɵɵproperty","formControlName","ɵɵtextInterpolate","type","tmp_5_0","ctx_r2","formGroup","get","invalid","touched","ɵɵlistener","DeminscriComponent_div_0_Template_form_ngSubmit_3_listener","ɵɵrestoreView","_r7","ctx_r6","ɵɵnextContext","ɵɵresetView","onSubmit","DeminscriComponent_div_0_div_4_Template","ctx_r0","title","dynamicFields","DeminscriComponent","constructor","route","fb","item","formsConfig","fields","ngOnInit","snapshot","paramMap","formConfig","formControls","forEach","field","required","group","console","error","valid","log","value","alert","markAllAsTouched","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FormBuilder","selectors","decls","vars","consts","template","DeminscriComponent_Template","rf","ctx","DeminscriComponent_div_0_Template","DeminscriComponent_div_1_Template"],"sources":["C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.ts","C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-deminscri',\n  templateUrl: './deminscri.component.html',\n  styleUrls: ['./deminscri.component.css'],\n})\nexport class DeminscriComponent implements OnInit {\n  item: string | null = null;\n  title: string = 'Form';\n  formGroup!: FormGroup;\n  dynamicFields: any[] = [];\n\n  // Configuration for forms based on the selected item\n  formsConfig: { [key: string]: any } = {\n    'mapping-request': {\n      title: 'مطلب ترسيم',\n      fields: [\n        { label: 'Field 1', type: 'text', formControlName: 'field1' },\n        { label: 'Field 2', type: 'number', formControlName: 'field2' },\n      ],\n    },\n    'ownership-deed': {\n      title: 'سند ملكية',\n      fields: [\n        { label: 'Name', type: 'text', formControlName: 'name' },\n        { label: 'Document ID', type: 'text', formControlName: 'documentId' },\n      ],\n    },\n    // Add more forms here...\n  };\n\n  constructor(private route: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    // Get the item from the route\n    this.item = this.route.snapshot.paramMap.get('item');\n\n    // Load the form configuration based on the item\n    const formConfig = this.formsConfig[this.item || ''];\n\n    if (formConfig) {\n      this.title = formConfig.title;\n      this.dynamicFields = formConfig.fields;\n\n      // Initialize the form group dynamically\n      const formControls: { [key: string]: any } = {};\n      formConfig.fields.forEach((field: any) => {\n        formControls[field.formControlName] = ['', Validators.required];\n      });\n\n      this.formGroup = this.fb.group(formControls);\n    } else {\n      console.error('No form configuration found for:', this.item);\n    }\n  }\n\n  // Handle form submission\n  onSubmit(): void {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted for:', this.item);\n      console.log('Form Values:', this.formGroup.value);\n      alert('Form submitted successfully!');\n    } else {\n      alert('Please fill all required fields.');\n      this.formGroup.markAllAsTouched();\n    }\n  }\n}\n","<div *ngIf=\"item\">\n  <h1>{{ title }}</h1>\n  <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit()\">\n    <div *ngFor=\"let field of dynamicFields\" class=\"mb-3\">\n      <label [for]=\"field.formControlName\" class=\"form-label\">{{ field.label }}</label>\n      <input\n        [id]=\"field.formControlName\"\n        [type]=\"field.type\"\n        class=\"form-control\"\n        [formControlName]=\"field.formControlName\"\n      />\n      <div\n        *ngIf=\"formGroup.get(field.formControlName)?.invalid && formGroup.get(field.formControlName)?.touched\"\n        class=\"text-danger\"\n      >\n        {{ field.label }} is required\n      </div>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"formGroup.invalid\">\n      Submit\n    </button>\n  </form>\n</div>\n\n<div *ngIf=\"!item\">\n  <h1>No item selected</h1>\n  <p>Please navigate to a valid item.</p>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}