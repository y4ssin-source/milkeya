{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, ViewChild } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let MainPageComponent = class MainPageComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.currentDate = ''; // Stores the current date to display in the top bar\n    this.items = ['مطلب ترسيم', 'سند ملكية', 'نسخة من سند ملكية', 'شهادة ملكية', 'شهادة اشتراك في الملكية', 'شهادة في عدم الملكية', 'شهادة إبراء رسوم عقارية', 'نسخة مطابقة للأصل من وثيقة', 'شهادة في مراحل تسجيل عقد', 'نسخة مطابقة للأصل من رسم عقاري', 'نسخة مجردة من رسم عقاري', 'تكوين ملف ذات صبغة', 'الإطلاع على رسم عقاري', 'تحرير عقد', 'تنفيذ حكم بالتسجيل']; // List of items for the scrollable cards\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.setCurrentDate();\n  }\n  /**\n   * Initialize the form with form controls and their validators\n   */\n  initializeForm() {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      surname: ['', [Validators.required, Validators.minLength(3)]],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: [''],\n      address: ['', Validators.required],\n      documentName: ['', Validators.required]\n    });\n  }\n  /**\n   * Set the current date to display in the top bar\n   */\n  setCurrentDate() {\n    const today = new Date();\n    this.currentDate = today.toLocaleDateString('EG', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n  /**\n   * Handle form submission\n   */\n  onSubmit() {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted Successfully:', this.formGroup.value);\n      alert('تم الحفظ بنجاح!');\n    } else {\n      alert('يرجى التحقق من صحة النموذج قبل الإرسال.');\n      this.formGroup.markAllAsTouched(); // Highlights invalid fields\n    }\n  }\n  /**\n   * Scroll the cards container to the left\n   */\n  scrollLeft() {\n    this.scrollableWrapper.nativeElement.scrollBy({\n      left: -200,\n      behavior: 'smooth'\n    });\n  }\n  /**\n   * Scroll the cards container to the right\n   */\n  scrollRight() {\n    this.scrollableWrapper.nativeElement.scrollBy({\n      left: 200,\n      behavior: 'smooth'\n    });\n  }\n};\n__decorate([ViewChild('scrollableWrapper', {\n  static: true\n})], MainPageComponent.prototype, \"scrollableWrapper\", void 0);\nMainPageComponent = __decorate([Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})], MainPageComponent);","map":{"version":3,"names":["Component","ViewChild","Validators","MainPageComponent","constructor","fb","currentDate","items","ngOnInit","initializeForm","setCurrentDate","formGroup","group","name","required","minLength","surname","identityDocument","countNumber","pattern","issueDate","issuePlace","entityName","address","documentName","today","Date","toLocaleDateString","year","month","day","onSubmit","valid","console","log","value","alert","markAllAsTouched","scrollLeft","scrollableWrapper","nativeElement","scrollBy","left","behavior","scrollRight","__decorate","static","selector","templateUrl","styleUrls"],"sources":["C:\\angular-dashboards-main\\dashboard-v2\\src\\app\\mainpage\\mainpage.component.ts"],"sourcesContent":["import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  formGroup!: FormGroup; // Holds form controls and their validation state\n  currentDate: string = ''; // Stores the current date to display in the top bar\n\n  @ViewChild('scrollableWrapper', { static: true })\n  scrollableWrapper!: ElementRef; // Reference to the scrollable cards container\n\n  items: string[] = [\n    'مطلب ترسيم',\n    'سند ملكية',\n    'نسخة من سند ملكية',\n    'شهادة ملكية',\n    'شهادة اشتراك في الملكية',\n    'شهادة في عدم الملكية',\n    'شهادة إبراء رسوم عقارية',\n    'نسخة مطابقة للأصل من وثيقة',\n    'شهادة في مراحل تسجيل عقد',\n    'نسخة مطابقة للأصل من رسم عقاري',\n    'نسخة مجردة من رسم عقاري',\n    'تكوين ملف ذات صبغة',\n    'الإطلاع على رسم عقاري',\n    'تحرير عقد',\n    'تنفيذ حكم بالتسجيل',\n  ]; // List of items for the scrollable cards\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.setCurrentDate();\n  }\n\n  /**\n   * Initialize the form with form controls and their validators\n   */\n  private initializeForm(): void {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      surname: ['', [Validators.required, Validators.minLength(3)]],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: [''], // Optional field\n      address: ['', Validators.required],\n      documentName: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Set the current date to display in the top bar\n   */\n  private setCurrentDate(): void {\n    const today = new Date();\n    this.currentDate = today.toLocaleDateString('EG', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n\n  /**\n   * Handle form submission\n   */\n  onSubmit(): void {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted Successfully:', this.formGroup.value);\n      alert('تم الحفظ بنجاح!');\n    } else {\n      alert('يرجى التحقق من صحة النموذج قبل الإرسال.');\n      this.formGroup.markAllAsTouched(); // Highlights invalid fields\n    }\n  }\n\n  /**\n   * Scroll the cards container to the left\n   */\n  scrollLeft(): void {\n    this.scrollableWrapper.nativeElement.scrollBy({\n      left: -200, // Adjust scroll distance\n      behavior: 'smooth'\n    });\n  }\n\n  /**\n   * Scroll the cards container to the right\n   */\n  scrollRight(): void {\n    this.scrollableWrapper.nativeElement.scrollBy({\n      left: 200, // Adjust scroll distance\n      behavior: 'smooth'\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}