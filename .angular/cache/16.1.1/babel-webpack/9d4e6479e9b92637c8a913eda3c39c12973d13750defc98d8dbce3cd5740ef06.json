{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let MainPageComponent = class MainPageComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.currentDate = ''; // Stores the current date to display in the top bar\n  }\n\n  ngOnInit() {\n    this.initializeForm();\n    this.setCurrentDate();\n  }\n  /**\n   * Initialize the form with form controls and their validators\n   */\n  initializeForm() {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      surname: ['', [Validators.required, Validators.minLength(3)]],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: [''],\n      address: ['', Validators.required],\n      documentName: ['', Validators.required]\n    });\n  }\n  /**\n   * Set the current date to display in the top bar\n   */\n  setCurrentDate() {\n    const today = new Date();\n    this.currentDate = today.toLocaleDateString('EG', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n  /**\n   * Handle form submission\n   */\n  onSubmit() {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted Successfully:', this.formGroup.value);\n      alert('تم الحفظ بنجاح!');\n    } else {\n      alert('يرجى التحقق من صحة النموذج قبل الإرسال.');\n      this.formGroup.markAllAsTouched(); // Highlights invalid fields\n    }\n  }\n};\n\nMainPageComponent = __decorate([Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})], MainPageComponent);","map":{"version":3,"names":["Component","Validators","MainPageComponent","constructor","fb","currentDate","ngOnInit","initializeForm","setCurrentDate","formGroup","group","name","required","minLength","surname","identityDocument","countNumber","pattern","issueDate","issuePlace","entityName","address","documentName","today","Date","toLocaleDateString","year","month","day","onSubmit","valid","console","log","value","alert","markAllAsTouched","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\angular-dashboards-main\\dashboard-v2\\src\\app\\mainpage\\mainpage.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-mainpage',\n  templateUrl: './mainpage.component.html',\n  styleUrls: ['./mainpage.component.css']\n})\nexport class MainPageComponent implements OnInit {\n  formGroup!: FormGroup; // Holds form controls and their validation state\n  currentDate: string = ''; // Stores the current date to display in the top bar\n\n  constructor(private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    this.initializeForm();\n    this.setCurrentDate();\n  }\n\n  /**\n   * Initialize the form with form controls and their validators\n   */\n  private initializeForm(): void {\n    this.formGroup = this.fb.group({\n      name: ['', [Validators.required, Validators.minLength(3)]],\n      surname: ['', [Validators.required, Validators.minLength(3)]],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', [Validators.required, Validators.pattern('^[0-9]+$')]],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: [''], // Optional field\n      address: ['', Validators.required],\n      documentName: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Set the current date to display in the top bar\n   */\n  private setCurrentDate(): void {\n    const today = new Date();\n    this.currentDate = today.toLocaleDateString('EG', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit'\n    });\n  }\n\n  /**\n   * Handle form submission\n   */\n  onSubmit(): void {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted Successfully:', this.formGroup.value);\n      alert('تم الحفظ بنجاح!');\n    } else {\n      alert('يرجى التحقق من صحة النموذج قبل الإرسال.');\n      this.formGroup.markAllAsTouched(); // Highlights invalid fields\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,WAAW,GAAW,EAAE,CAAC,CAAC;EAEY;;EAEtCC,QAAQA,CAAA;IACN,IAAI,CAACC,cAAc,EAAE;IACrB,IAAI,CAACC,cAAc,EAAE;EACvB;EAEA;;;EAGQD,cAAcA,CAAA;IACpB,IAAI,CAACE,SAAS,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAE,CAACV,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC1DC,OAAO,EAAE,CAAC,EAAE,EAAE,CAACb,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACY,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC7DE,gBAAgB,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACW,QAAQ,CAAC;MAC3CI,WAAW,EAAE,CAAC,EAAE,EAAE,CAACf,UAAU,CAACW,QAAQ,EAAEX,UAAU,CAACgB,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC;MACxEC,SAAS,EAAE,CAAC,EAAE,EAAEjB,UAAU,CAACW,QAAQ,CAAC;MACpCO,UAAU,EAAE,CAAC,EAAE,EAAElB,UAAU,CAACW,QAAQ,CAAC;MACrCQ,UAAU,EAAE,CAAC,EAAE,CAAC;MAChBC,OAAO,EAAE,CAAC,EAAE,EAAEpB,UAAU,CAACW,QAAQ,CAAC;MAClCU,YAAY,EAAE,CAAC,EAAE,EAAErB,UAAU,CAACW,QAAQ;KACvC,CAAC;EACJ;EAEA;;;EAGQJ,cAAcA,CAAA;IACpB,MAAMe,KAAK,GAAG,IAAIC,IAAI,EAAE;IACxB,IAAI,CAACnB,WAAW,GAAGkB,KAAK,CAACE,kBAAkB,CAAC,IAAI,EAAE;MAChDC,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE,SAAS;MAChBC,GAAG,EAAE;KACN,CAAC;EACJ;EAEA;;;EAGAC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACpB,SAAS,CAACqB,KAAK,EAAE;MACxBC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAE,IAAI,CAACvB,SAAS,CAACwB,KAAK,CAAC;MACjEC,KAAK,CAAC,iBAAiB,CAAC;KACzB,MAAM;MACLA,KAAK,CAAC,yCAAyC,CAAC;MAChD,IAAI,CAACzB,SAAS,CAAC0B,gBAAgB,EAAE,CAAC,CAAC;;EAEvC;CACD;;AApDYjC,iBAAiB,GAAAkC,UAAA,EAL7BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrC,iBAAiB,CAoD7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}