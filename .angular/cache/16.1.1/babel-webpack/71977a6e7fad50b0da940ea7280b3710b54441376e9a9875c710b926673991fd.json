{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nfunction DeminscriComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Display the form or content for the selected item here1.\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Form for \", \"mapping-request\", \"\");\n  }\n}\nfunction DeminscriComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Display the form or content for the selected item here1.\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Form for \", ctx_r1.item, \"\");\n  }\n}\nexport class DeminscriComponent {\n  constructor(route) {\n    this.route = route;\n    this.item = null; // Variable to hold the route parameter\n  }\n\n  ngOnInit() {\n    // Get the 'item' parameter from the route\n    this.item = this.route.snapshot.paramMap.get('mapping-request');\n    console.log('Item from route:', this.item);\n  }\n}\nDeminscriComponent.ɵfac = function DeminscriComponent_Factory(t) {\n  return new (t || DeminscriComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n};\nDeminscriComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeminscriComponent,\n  selectors: [[\"app-deminscri\"]],\n  decls: 2,\n  vars: 2,\n  consts: [[4, \"ngIf\"]],\n  template: function DeminscriComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DeminscriComponent_div_0_Template, 5, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, DeminscriComponent_div_1_Template, 5, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.item);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.item);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","item","DeminscriComponent","constructor","route","ngOnInit","snapshot","paramMap","get","console","log","ɵɵdirectiveInject","i1","ActivatedRoute","selectors","decls","vars","consts","template","DeminscriComponent_Template","rf","ctx","ɵɵtemplate","DeminscriComponent_div_0_Template","DeminscriComponent_div_1_Template","ɵɵproperty"],"sources":["C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.ts","C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router'; // Import ActivatedRoute to access route parameters\n\n@Component({\n  selector: 'app-deminscri',\n  templateUrl: './deminscri.component.html',\n  styleUrls: ['./deminscri.component.css']\n})\nexport class DeminscriComponent implements OnInit {\n  item: string | null = null; // Variable to hold the route parameter\n\n  constructor(private route: ActivatedRoute) {}\n\n  ngOnInit(): void {\n    // Get the 'item' parameter from the route\n    this.item = this.route.snapshot.paramMap.get('mapping-request');\n    console.log('Item from route:', this.item);\n  }\n}\n","<div *ngIf=\"item\">\n    <h1>Form for {{ 'mapping-request' }}</h1>\n    <p>Display the form or content for the selected item here1.</p>\n  </div>\n  <div *ngIf=\"item\">\n    <h1>Form for {{ item }}</h1>\n    <p>Display the form or content for the selected item here1.</p>\n  </div>\n  \n  \n  "],"mappings":";;;;;ICAAA,EAAA,CAAAC,cAAA,UAAkB;IACVD,EAAA,CAAAE,MAAA,GAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,+DAAwD;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;IAD3DH,EAAA,CAAAI,SAAA,GAAgC;IAAhCJ,EAAA,CAAAK,kBAAA,oCAAgC;;;;;IAGtCL,EAAA,CAAAC,cAAA,UAAkB;IACZD,EAAA,CAAAE,MAAA,GAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC5BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,+DAAwD;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAD3DH,EAAA,CAAAI,SAAA,GAAmB;IAAnBJ,EAAA,CAAAK,kBAAA,cAAAC,MAAA,CAAAC,IAAA,KAAmB;;;ADG3B,OAAM,MAAOC,kBAAkB;EAG7BC,YAAoBC,KAAqB;IAArB,KAAAA,KAAK,GAALA,KAAK;IAFzB,KAAAH,IAAI,GAAkB,IAAI,CAAC,CAAC;EAEgB;;EAE5CI,QAAQA,CAAA;IACN;IACA,IAAI,CAACJ,IAAI,GAAG,IAAI,CAACG,KAAK,CAACE,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC/DC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAACT,IAAI,CAAC;EAC5C;;AATWC,kBAAkB,C;mBAAlBA,kBAAkB,EAAAR,EAAA,CAAAiB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAlBX,kBAAkB,C;QAAlBA,kBAAkB;EAAAY,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR/B1B,EAAA,CAAA4B,UAAA,IAAAC,iCAAA,iBAGQ;MACN7B,EAAA,CAAA4B,UAAA,IAAAE,iCAAA,iBAGM;;;MAPF9B,EAAA,CAAA+B,UAAA,SAAAJ,GAAA,CAAApB,IAAA,CAAU;MAIRP,EAAA,CAAAI,SAAA,GAAU;MAAVJ,EAAA,CAAA+B,UAAA,SAAAJ,GAAA,CAAApB,IAAA,CAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}