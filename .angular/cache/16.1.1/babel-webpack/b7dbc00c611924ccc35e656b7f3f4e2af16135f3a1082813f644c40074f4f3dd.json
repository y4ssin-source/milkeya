{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\nfunction DeminscriComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4, \"Display the form or content for the selected item here1.\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Form for \", ctx_r0.item, \"\");\n  }\n}\nexport class DeminscriComponent {\n  constructor(route, fb) {\n    this.route = route;\n    this.fb = fb;\n    this.item = null;\n    this.title = 'Form';\n    this.dynamicFields = [];\n    // Configuration for forms based on the selected item\n    this.formsConfig = {\n      'mapping-request': {\n        title: 'مطلب ترسيم',\n        fields: [{\n          label: 'Field 1',\n          type: 'text',\n          formControlName: 'field1'\n        }, {\n          label: 'Field 2',\n          type: 'number',\n          formControlName: 'field2'\n        }]\n      },\n      'ownership-deed': {\n        title: 'سند ملكية',\n        fields: [{\n          label: 'Name',\n          type: 'text',\n          formControlName: 'name'\n        }, {\n          label: 'Document ID',\n          type: 'text',\n          formControlName: 'documentId'\n        }]\n      }\n      // Add more forms here...\n    };\n  }\n\n  ngOnInit() {\n    // Get the item from the route\n    this.item = this.route.snapshot.paramMap.get('item');\n    // Load the form configuration based on the item\n    const formConfig = this.formsConfig[this.item || ''];\n    if (formConfig) {\n      this.title = formConfig.title;\n      this.dynamicFields = formConfig.fields;\n      // Initialize the form group dynamically\n      const formControls = {};\n      formConfig.fields.forEach(field => {\n        formControls[field.formControlName] = ['', Validators.required];\n      });\n      this.formGroup = this.fb.group(formControls);\n    } else {\n      console.error('No form configuration found for:', this.item);\n    }\n  }\n  // Handle form submission\n  onSubmit() {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted for:', this.item);\n      console.log('Form Values:', this.formGroup.value);\n      alert('Form submitted successfully!');\n    } else {\n      alert('Please fill all required fields.');\n      this.formGroup.markAllAsTouched();\n    }\n  }\n}\nDeminscriComponent.ɵfac = function DeminscriComponent_Factory(t) {\n  return new (t || DeminscriComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder));\n};\nDeminscriComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DeminscriComponent,\n  selectors: [[\"app-deminscri\"]],\n  decls: 1,\n  vars: 1,\n  consts: [[4, \"ngIf\"]],\n  template: function DeminscriComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, DeminscriComponent_div_0_Template, 5, 1, \"div\", 0);\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", ctx.item);\n    }\n  },\n  dependencies: [i3.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","item","DeminscriComponent","constructor","route","fb","title","dynamicFields","formsConfig","fields","label","type","formControlName","ngOnInit","snapshot","paramMap","get","formConfig","formControls","forEach","field","required","formGroup","group","console","error","onSubmit","valid","log","value","alert","markAllAsTouched","ɵɵdirectiveInject","i1","ActivatedRoute","i2","FormBuilder","selectors","decls","vars","consts","template","DeminscriComponent_Template","rf","ctx","ɵɵtemplate","DeminscriComponent_div_0_Template","ɵɵproperty"],"sources":["C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.ts","C:\\dashboard-v2\\src\\app\\deminscri\\deminscri.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-deminscri',\n  templateUrl: './deminscri.component.html',\n  styleUrls: ['./deminscri.component.css'],\n})\nexport class DeminscriComponent implements OnInit {\n  item: string | null = null;\n  title: string = 'Form';\n  formGroup!: FormGroup;\n  dynamicFields: any[] = [];\n\n  // Configuration for forms based on the selected item\n  formsConfig: { [key: string]: any } = {\n    'mapping-request': {\n      title: 'مطلب ترسيم',\n      fields: [\n        { label: 'Field 1', type: 'text', formControlName: 'field1' },\n        { label: 'Field 2', type: 'number', formControlName: 'field2' },\n      ],\n    },\n    'ownership-deed': {\n      title: 'سند ملكية',\n      fields: [\n        { label: 'Name', type: 'text', formControlName: 'name' },\n        { label: 'Document ID', type: 'text', formControlName: 'documentId' },\n      ],\n    },\n    // Add more forms here...\n  };\n\n  constructor(private route: ActivatedRoute, private fb: FormBuilder) {}\n\n  ngOnInit(): void {\n    // Get the item from the route\n    this.item = this.route.snapshot.paramMap.get('item');\n\n    // Load the form configuration based on the item\n    const formConfig = this.formsConfig[this.item || ''];\n\n    if (formConfig) {\n      this.title = formConfig.title;\n      this.dynamicFields = formConfig.fields;\n\n      // Initialize the form group dynamically\n      const formControls: { [key: string]: any } = {};\n      formConfig.fields.forEach((field: any) => {\n        formControls[field.formControlName] = ['', Validators.required];\n      });\n\n      this.formGroup = this.fb.group(formControls);\n    } else {\n      console.error('No form configuration found for:', this.item);\n    }\n  }\n\n  // Handle form submission\n  onSubmit(): void {\n    if (this.formGroup.valid) {\n      console.log('Form Submitted for:', this.item);\n      console.log('Form Values:', this.formGroup.value);\n      alert('Form submitted successfully!');\n    } else {\n      alert('Please fill all required fields.');\n      this.formGroup.markAllAsTouched();\n    }\n  }\n}\n","<div *ngIf=\"item\">\n    <h1>Form for {{ item }}</h1>\n    <p>Display the form or content for the selected item here1.</p>\n  </div>\n \n  \n  \n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}