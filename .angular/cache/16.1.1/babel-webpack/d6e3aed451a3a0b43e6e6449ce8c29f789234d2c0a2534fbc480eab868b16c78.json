{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let FormComponentComponent = class FormComponentComponent {\n  constructor(fb) {\n    this.fb = fb;\n    // Initialize the form group with controls\n    this.inputForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', Validators.required],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: ['', Validators.required],\n      address: ['', Validators.required],\n      paymentMethod: ['', Validators.required]\n    });\n  }\n  ngOnInit() {}\n  onSubmit() {\n    if (this.inputForm.invalid) {\n      this.showValidationErrors();\n    } else {\n      alert('Form submitted successfully!');\n      console.log(this.inputForm.value);\n    }\n  }\n  showValidationErrors() {\n    const controls = this.inputForm.controls;\n    for (const field in controls) {\n      if (controls[field].invalid) {\n        const errorLabel = this.getLabelText(field);\n        alert(`${errorLabel} مطلوب`);\n      }\n    }\n  }\n  getLabelText(controlName) {\n    const labels = {\n      name: 'الاسم',\n      surname: 'اللقب',\n      identityDocument: 'وثيقة الهوية',\n      countNumber: 'عددها',\n      issueDate: 'تاريخ إصدارها',\n      issuePlace: 'مكان إصدارها',\n      entityName: 'تسمية الذات الإعتبارية',\n      address: 'العنوان',\n      paymentMethod: 'كيفية الدفع'\n    };\n    return labels[controlName] || controlName;\n  }\n};\nFormComponentComponent = __decorate([Component({\n  selector: 'app-form-component',\n  templateUrl: './form-component.component.html',\n  styleUrls: ['./form-component.component.css']\n})], FormComponentComponent);","map":{"version":3,"names":["Component","Validators","FormComponentComponent","constructor","fb","inputForm","group","name","required","surname","identityDocument","countNumber","issueDate","issuePlace","entityName","address","paymentMethod","ngOnInit","onSubmit","invalid","showValidationErrors","alert","console","log","value","controls","field","errorLabel","getLabelText","controlName","labels","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\angular-dashboards-main\\dashboard-v2\\src\\app\\mainpage\\mainpage.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-form-component',\n  templateUrl: './form-component.component.html',\n  styleUrls: ['./form-component.component.css']\n})\nexport class FormComponentComponent implements OnInit {\n  inputForm: FormGroup;\n\n  constructor(private fb: FormBuilder) {\n    // Initialize the form group with controls\n    this.inputForm = this.fb.group({\n      name: ['', Validators.required],\n      surname: ['', Validators.required],\n      identityDocument: ['', Validators.required],\n      countNumber: ['', Validators.required],\n      issueDate: ['', Validators.required],\n      issuePlace: ['', Validators.required],\n      entityName: ['', Validators.required],\n      address: ['', Validators.required],\n      paymentMethod: ['', Validators.required]\n    });\n  }\n\n  ngOnInit(): void {}\n\n  onSubmit(): void {\n    if (this.inputForm.invalid) {\n      this.showValidationErrors();\n    } else {\n      alert('Form submitted successfully!');\n      console.log(this.inputForm.value);\n    }\n  }\n\n  private showValidationErrors(): void {\n    const controls = this.inputForm.controls;\n\n    for (const field in controls) {\n      if (controls[field].invalid) {\n        const errorLabel = this.getLabelText(field);\n        alert(`${errorLabel} مطلوب`);\n      }\n    }\n  }\n\n  private getLabelText(controlName: string): string {\n    const labels: { [key: string]: string } = {\n      name: 'الاسم',\n      surname: 'اللقب',\n      identityDocument: 'وثيقة الهوية',\n      countNumber: 'عددها',\n      issueDate: 'تاريخ إصدارها',\n      issuePlace: 'مكان إصدارها',\n      entityName: 'تسمية الذات الإعتبارية',\n      address: 'العنوان',\n      paymentMethod: 'كيفية الدفع'\n    };\n\n    return labels[controlName] || controlName;\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAO5D,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAGjCC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IACpB;IACA,IAAI,CAACC,SAAS,GAAG,IAAI,CAACD,EAAE,CAACE,KAAK,CAAC;MAC7BC,IAAI,EAAE,CAAC,EAAE,EAAEN,UAAU,CAACO,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAER,UAAU,CAACO,QAAQ,CAAC;MAClCE,gBAAgB,EAAE,CAAC,EAAE,EAAET,UAAU,CAACO,QAAQ,CAAC;MAC3CG,WAAW,EAAE,CAAC,EAAE,EAAEV,UAAU,CAACO,QAAQ,CAAC;MACtCI,SAAS,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACO,QAAQ,CAAC;MACpCK,UAAU,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACO,QAAQ,CAAC;MACrCM,UAAU,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACO,QAAQ,CAAC;MACrCO,OAAO,EAAE,CAAC,EAAE,EAAEd,UAAU,CAACO,QAAQ,CAAC;MAClCQ,aAAa,EAAE,CAAC,EAAE,EAAEf,UAAU,CAACO,QAAQ;KACxC,CAAC;EACJ;EAEAS,QAAQA,CAAA,GAAU;EAElBC,QAAQA,CAAA;IACN,IAAI,IAAI,CAACb,SAAS,CAACc,OAAO,EAAE;MAC1B,IAAI,CAACC,oBAAoB,EAAE;KAC5B,MAAM;MACLC,KAAK,CAAC,8BAA8B,CAAC;MACrCC,OAAO,CAACC,GAAG,CAAC,IAAI,CAAClB,SAAS,CAACmB,KAAK,CAAC;;EAErC;EAEQJ,oBAAoBA,CAAA;IAC1B,MAAMK,QAAQ,GAAG,IAAI,CAACpB,SAAS,CAACoB,QAAQ;IAExC,KAAK,MAAMC,KAAK,IAAID,QAAQ,EAAE;MAC5B,IAAIA,QAAQ,CAACC,KAAK,CAAC,CAACP,OAAO,EAAE;QAC3B,MAAMQ,UAAU,GAAG,IAAI,CAACC,YAAY,CAACF,KAAK,CAAC;QAC3CL,KAAK,CAAC,GAAGM,UAAU,QAAQ,CAAC;;;EAGlC;EAEQC,YAAYA,CAACC,WAAmB;IACtC,MAAMC,MAAM,GAA8B;MACxCvB,IAAI,EAAE,OAAO;MACbE,OAAO,EAAE,OAAO;MAChBC,gBAAgB,EAAE,cAAc;MAChCC,WAAW,EAAE,OAAO;MACpBC,SAAS,EAAE,eAAe;MAC1BC,UAAU,EAAE,cAAc;MAC1BC,UAAU,EAAE,wBAAwB;MACpCC,OAAO,EAAE,SAAS;MAClBC,aAAa,EAAE;KAChB;IAED,OAAOc,MAAM,CAACD,WAAW,CAAC,IAAIA,WAAW;EAC3C;CACD;AAvDY3B,sBAAsB,GAAA6B,UAAA,EALlC/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,oBAAoB;EAC9BC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWhC,sBAAsB,CAuDlC"},"metadata":{},"sourceType":"module","externalDependencies":[]}